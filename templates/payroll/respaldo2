{% extends 'base/base.html' %}
{% load crispy_forms_tags %}
{% block navbar %}
    {% include 'base/navbar_payroll.html' %}               
{% endblock %}

{% load static %} 


{% block title %}
    Nomiweb.co - Aplicacion Contable - Parametros - Conceptos de Nomina
{% endblock %}



{% block sub_titulo1 %} 
Parametros
{% endblock %}

{% block sub_titulo2 %} 
Conceptos de Nomina
{% endblock %}

{% block titulo2 %} 
Listado de Conceptos
{% endblock %}

{% block actions %}
<!-- Button trigger modal -->
    <button type="button"  class="btn btn-light-info"  data-bs-toggle="modal" data-bs-target="#kt_modal_maintenance" >
        <i class="fa-solid fa-square-plus fs-2"></i>Agregar Concepto
    </button>  
{% endblock %}



{%block content%} 



<!-- Bloque de bienvenida -->
<div class="grid-x align-center">
    <h1 class="cell large-8" style="font-size: 25px; text-align: center;"></h1>
    <div class="cell large-7">
        <div class="callout success">
            
        </div>
    </div>
    
</div>
<!-- Fin bloque de Bienvenida -->


<!-- Modal -->
<div class="modal fade" tabindex="-1" id="kt_modal_maintenance">
    <div class="modal-dialog modal-dialog-centered  modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Nuevo Concepto</h3>

                <!--begin::Close-->
                <div class="btn btn-icon btn-sm btn-active-light-primary ms-2" data-bs-dismiss="modal" aria-label="Close">
                    <i class="ki-duotone ki-cross fs-1"><span class="path1"></span><span class="path2"></span></i>
                </div>
                <!--end::Close-->
            </div>

            <div class="modal-body">
                {% csrf_token %}
                {% crispy form %}
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cerrar</button>
                <button type="submit" form="form_concepts"  class="btn btn-primary">Crear</button>
            </div>
        </div>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered" id="tabla-concepts">
        <thead>
            <tr class="fw-bold fs-6 text-gray-800">
                <th class="text-center">Código</th>
                <th class="text-center">Nombre del Concepto</th>
                <th class="text-center">Tipo de Concepto</th>
                <th class="text-center">Grupo DIAN</th>
            </tr>
        </thead>
        <tbody>
            {% for concept in concepts %}
                <tr>
                    <td class="text-center align-middle" >{{ concept.codigo }}</td>
                    <td class="text-center align-middle" >{{ concept.nombreconcepto }}</td>
                    <td class="text-center align-middle" >
                        
                        {% if concept.tipoconcepto == 1 %}
                            <p > Ingreso</p>
                        {% elif concept.tipoconcepto == 2 %}
                            <p >Deducción</p>
                        {% elif  concept.tipoconcepto == 3 %}
                            <p >Prestación</p>
                        {% else  %}
                            Error
                        {% endif %}
                    </td>
                    <td class="text-center align-middle" >{{ concept.grupo_dian.campo }}</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>


{% endblock content %}









{% block js %}
<script>
    $(document).ready(function() {
        $('#tabla-concepts').DataTable({
            language: {
                "decimal": "",
                "emptyTable": "No hay datos disponibles en la tabla",
                "info": "Mostrando _START_ a _END_ de _TOTAL_ entradas",
                "infoEmpty": "Mostrando 0 a 0 de 0 entradas",
                "infoFiltered": "(filtrado de _MAX_ entradas totales)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "Mostrar _MENU_ entradas",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "Buscar:",
                "zeroRecords": "No se encontraron registros coincidentes",
                "paginate": {
                    "first": "Primero",
                    "last": "Último",
                    "next": "Siguiente",
                    "previous": "Anterior"
                },
                "aria": {
                    "sortAscending": ": activar para ordenar la columna ascendente",
                    "sortDescending": ": activar para ordenar la columna descendente"
                }
            },
            dom: 'frtip',
            order: [],
            pageLength: 10
        });
    });
</script>
{% endblock %}




if (responseJson.valid === false) {
    input.classList.add('is-invalid');
    input.classList.remove('is-valid');
    
    // Aquí actualizamos el mensaje de error de FormValidation
    FormValidation.plugins.Bootstrap5.updateMessage(
        input, 'codigo', 'notEmpty', responseJson.message
    );
    
    // Actualizamos el estado del input con FormValidation
    FormValidation.plugins.Bootstrap5.updateStatus(input, 'codigo', 'INVALID');
} else {
    input.classList.add('is-valid');
    input.classList.remove('is-invalid');
    
    // Actualizamos el mensaje de éxito
    FormValidation.plugins.Bootstrap5.updateMessage(
        input, 'codigo', 'notEmpty', responseJson.message
    );
    
    // Actualizamos el estado del input con FormValidation
    FormValidation.plugins.Bootstrap5.updateStatus(input, 'codigo', 'VALID');
}


// Escucha el evento 'htmx:afterRequest' para manejar la respuesta del servidor
document.body.addEventListener('htmx:afterRequest', function(evt) {
    if (evt.detail.successful) {
        var response = evt.detail.xhr.responseText;
        
        // Verificar si la respuesta es un JSON con estado de éxito
        try {
            var responseJson = JSON.parse(response);
            
            if (responseJson.status === 'success') {
                var modal = bootstrap.Modal.getInstance(document.getElementById('conceptsModal'));
                var modalBackdrop = document.querySelector('.modal-backdrop');
                
                if (modal) {
                    modal.hide(); // Cierra el modal después de una respuesta exitosa
                }

                if (modalBackdrop) {
                    modalBackdrop.remove(); // Elimina el fondo modal residual
                }

                // Mostrar el Swal de éxito
                Swal.fire({
                    text: responseJson.message, // Mensaje de éxito
                    icon: "success",  
                    showConfirmButton: true,
                    confirmButtonText: "Ok",
                    customClass: {
                        confirmButton: "btn btn-primary"
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.reload();  // Recarga la página
                    }
                });

            } else {
                
            }
        } catch (e) {
            
        }
    }
});


